@model ReportOverviewApp.Models.ReportViewModels.ReportViewModel

@{
    ViewData["Title"] = "Index";
}
<style>
    .report-index{
        margin-left: auto;
    }
</style>
<h3 class="page-header">Reports 
    <button class="btn btn-primary" type="button" id="mag-glass" data-toggle="modal" data-target="#SearchReportModal"><span class="glyphicon glyphicon-search"></span></button>
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#CreateReportModal" aria-label="Left Align"><span class="glyphicon glyphicon-plus-sign"></span></button>
    <button type="button" class="btn btn-primary" id="ViewTableButton" aria-label="Left Align"><span id="ViewTableButtonIcon" class="glyphicon glyphicon-resize-small"></span></button>
</h3>
<div id="SearchReportModal" class="modal fade" tabindex="-1" rolde="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                @await Html.PartialAsync("Search")
            </div>
        </div>
        
    </div>
</div>
<div id="CreateReportModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                @await Html.PartialAsync("Create", new Report())
            </div>
        </div>
    </div>
</div>
@if (Model == null || Model.Reports == null || Model.Reports.Count() == 0) { <br /><h4 style="text-align: center; padding-top: 30px">No Records To Display</h4> }
else {
    <table id="ReportTable" class="table report-table table-bordered table-condensed table-striped table-hover">
        <thead>
            <tr>
                <th>@Html.ActionLink("ID", "Index", new { search = Model.Search, plan = Model.Plan, pageIndex = Model.CurrentPage, column = "ID" , begin=Model.Begin, end=Model.End})</th>
                <th>@Html.ActionLink("Name", "Index", new { search = Model.Search, plan = Model.Plan, pageIndex = Model.CurrentPage, column = "Name", begin = Model.Begin, end = Model.End })</th>
                <th>@Html.ActionLink("Deadline", "Index", new { search = Model.Search, plan = Model.Plan, pageIndex = Model.CurrentPage, column = "Deadline", begin = Model.Begin, end = Model.End })</th>
                <th>Finished On</th>
                <th>Notified On</th>
                <th>Sent On</th>
                <th>Options</th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Model.Reports.Count(); i++)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => Model.Reports.ElementAt(i).ID)</td>
                    <td class="ReportName">@Html.DisplayFor(modelItem => Model.Reports.ElementAt(i).Name)</td>
                    <td>@Model.DisplayDateTimeAsDate(Model.Reports.ElementAt(i).Deadline())</td>
                    <td>
                        @*<input class="checkbox checkbox-inline" type="checkbox"/>*@
                        <text>@Html.DisplayFor(modelItem => Model.Reports.ElementAt(i).DateDone)</text>
                    </td>
                    <td>
                        @*<input class="checkbox checkbox-inline" type="checkbox" />*@
                        <text>@Html.DisplayFor(modelItem => Model.Reports.ElementAt(i).DateClientNotified)</text>
                    </td>
                    <td>
                        @*<input class="checkbox checkbox-inline" type="checkbox" />*@
                        <text>@Html.DisplayFor(modelItem => Model.Reports.ElementAt(i).DateSent)</text>
                    </td>
                    <td>
                        @{ var testing = $"\"id\" : {i}"; }
                        <a id="EditReportLink" onclick="EditReport()" data-toggle="modal" data-target="#EditReportModal"><span class="glyphicon glyphicon-edit"></span></a>
                        <a asp-action="Edit" asp-route-id="@Model.Reports.ElementAt(i).ID">Edit</a> |
                        <a asp-action="Details" asp-route-id="@Model.Reports.ElementAt(i).ID">Details</a> |
                        <a asp-action="Delete" asp-route-id="@Model.Reports.ElementAt(i).ID">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <textarea rows="10" cols="50" type="text" id="Tester" runat="server">

    </textarea>
    <div id="EditReportModal" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    @await Html.PartialAsync("Check", new Report())
                </div>
            </div>
        </div>
    </div>
    <nav aria-label="...">
        <div class="row container">
            <ul class="pagination col-sm-6">
                @{int pagenavlimit = 3; }
                @{ int pagelastlimit = 2;}
                @if (Model.CurrentPage == 1 )
                {
                    pagenavlimit += 2;
                    <li class="disabled">
                        <span>
                            <span aria-hidden="true">Prev</span>
                        </span>
                    </li>
                }
                else
                {
                    <li>
                        <span>
                            <span aria-hidden="true">@Html.ActionLink("Prev", "Index", new { search = Model.Search, column = Model.Column, plan = Model.Plan, pageIndex = Model.CurrentPage - 1, begin = Model.Begin, end = Model.End }) </span>
                        </span>
                    </li>
                }
                @if(Model.CurrentPage == 2)
                {
                    pagenavlimit += 1;
                }
                @if(Model.CurrentPage == Model.PagesCount())
                {
                    pagelastlimit += 2;
                }
                @if (Model.CurrentPage == Model.PagesCount()-1)
                {
                    pagelastlimit += 1;
                }
                @for (int i = Model.CurrentPage-pagelastlimit; i <= Model.PagesCount() && i <= Model.CurrentPage + pagenavlimit; i++)
                {
                    if (i < 1)
                    {
                        i = 1;
                    }
                    if (i == Model.CurrentPage + pagenavlimit)
                    {
                        <li class="disabled">
                            <span>...<span class="sr-only">(current)</span></span>
                        </li>
                        <li>
                            <span>@Html.ActionLink((Model.PagesCount()).ToString(), "Index", new { search = Model.Search, column = Model.Column, plan = Model.Plan, pageIndex = Model.PagesCount(), begin = Model.Begin, end = Model.End })</span>
                        </li>
                    }
                    else
                    {
                        if (i == Model.CurrentPage)
                        {
                            <li class="active" style="color:white;">
                                <span>@Html.ActionLink(@i.ToString(), "Index", new { search = Model.Search, column = Model.Column, plan = Model.Plan, pageIndex = @i })</span>
                            </li>

                        }
                        else
                        {
                            <li>
                                <span>@Html.ActionLink(@i.ToString(), "Index", new { search = Model.Search, column = Model.Column, plan = Model.Plan, pageIndex = @i })</span>
                            </li>
                        }
                    }
                }
                @if (Model.CurrentPage == Model.PagesCount())
                {
                    <li class="disabled">
                        <span>
                            <span aria-hidden="true">Next</span>
                        </span>
                    </li>
                }
                else
                {
                    <li>
                        <span>
                            <span aria-hidden="true">@Html.ActionLink("Next", "Index", new { search = Model.Search, column = Model.Column, plan = Model.Plan, pageIndex = Model.CurrentPage + 1 , begin = Model.Begin, end = Model.End }) </span>
                        </span>
                    </li>
                }
            </ul>       
        </div>
    </nav>
    <script src="http://code.jquery.com/jquery-1.9.1.js"></script>
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min.js"></script>
    <script type="text/javascript">
        var uri = window.location.href;
        function EditReport(input) {
            $(document).ready(
                function () {
                    $('tr').click(function () {
                        var currentIndex = $(this).parent().children().index($(this)) + 1;
                        var link = uri + "/JsonInfo/" + currentIndex; 
                        try {
                            $.ajax({
                                url: link,
                                type: "GET",
                                dataType: 'json',
                                contentType: 'application/json; charset=utf-8',
                                success: function (data) {
                                    handleJSONReport(data);
                                },
                                error: function () {
                                    alert("failed: " + link);
                                }
                            });
                        } catch (err) {
                            alert(err);
                        }
                    });
                }
            );
            function handleJSONReport(data) {
                if (data === null) {
                    alert("there is no data");
                } else {
                    var report = '';
                    report = JSON.stringify(data[0]);
                    $('#Tester').text(report);
                    for (var i in data[0]) {
                        $('#' + i).val(data[0][i]);
                        if (i === "dateDone" && data[0][i] != null) {
                            $('#done').prop('checked', true);
                        } if (i === 'dateClientNotified' && data[0][i] != null) {
                            $('#clientNotified').prop('checked', true);
                        } if (i === 'dateSent' && data[0][i] != null) {
                            $('#sent').prop('checked', true);
                        }
                    }
                }
            }
        }
    </script>
}