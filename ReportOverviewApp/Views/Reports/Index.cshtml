@model ReportOverviewApp.Models.ReportViewModels.ReportListViewModel

@{
    ViewData["Title"] = "Reporting Catalogue";
}
<style>
    .report-index{
        margin-left: auto;
    }
</style>
<h4>
    Reporting Catalogue
    <button class="btn btn-primary" type="button" id="mag-glass" data-toggle="modal" data-target="#SearchReportModal"><span class="fa fa-search"></span>&nbsp;&nbsp;Search</button>
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#createReportModal" aria-label="Left Align"><span class="fa fa-plus-square"></span>&nbsp;&nbsp;Create New</button>
</h4>
<div id="SearchReportModal" class="modal fade">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
             @await Html.PartialAsync("Search")
        </div>
    </div>
</div>
<div id="createReportModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            @await Html.PartialAsync("Create", new Report())
        </div>
    </div>
</div>
@if (Model == null || Model.Reports == null || Model.Reports.Count() == 0) { <br /><h4 class="text-center" style="padding-top: 30px">No Records To Display</h4> }
else {
    <table id="reportTable" class="table report-table table-bordered table-sm table-striped table-hover">
        <thead>
            <tr>
                <td class="bg-darkblue text-light" colspan="7">
                    Catalogue:&nbsp;&nbsp;Page @Model.CurrentPage
                </td>
            </tr>
            <tr>
                <th>@Html.ActionLink("Id", "Index", new { search = Model.Filters.Search, plan = Model.Filters.Plan, pageIndex = Model.CurrentPage, column = "Id", begin = Model.Filters.Begin, end = Model.Filters.End }, new {  })</th>
                <th>@Html.ActionLink("Name", "Index", new { search = Model.Filters.Search, plan = Model.Filters.Plan, pageIndex = Model.CurrentPage, column = "Name", begin = Model.Filters.Begin, end = Model.Filters.End }, new {  })</th>
                <th>@Html.ActionLink("Deadline", "Index", new { search = Model.Filters.Search, plan = Model.Filters.Plan, pageIndex = Model.CurrentPage, column = "Deadline", begin = Model.Filters.Begin, end = Model.Filters.End }, new {  })</th>
                <th>@Html.ActionLink("Finished On", "Index", new { search = Model.Filters.Search, plan = Model.Filters.Plan, pageIndex = Model.CurrentPage, column = "Finished On", begin = Model.Filters.Begin, end = Model.Filters.End }, new {  })</th>
                <th>@Html.ActionLink("Notified On", "Index", new { search = Model.Filters.Search, plan = Model.Filters.Plan, pageIndex = Model.CurrentPage, column = "Notified On", begin = Model.Filters.Begin, end = Model.Filters.End }, new {  })</th>
                <th>@Html.ActionLink("Sent On", "Index", new { search = Model.Filters.Search, plan = Model.Filters.Plan, pageIndex = Model.CurrentPage, column = "Sent On", begin = Model.Filters.Begin, end = Model.Filters.End }, new {  })</th>
                <th>Options</th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Model.Reports.Count(); i++)
            {
                <tr>
                    <td class="ReportID">@Html.DisplayFor(modelItem => Model.Reports.ElementAt(i).Id)</td>
                    <td class="ReportName">
                        @Html.DisplayFor(modelItem => Model.Reports.ElementAt(i).Name)
                    </td>
                    @*<td>@Model.DisplayDateTimeAsDate(Model.Reports.ElementAt(i).CurrentDeadline())</td>*@
                    <td>@Html.DisplayFor(modelItem => Model.Reports.ElementAt(i).Deadlines.OrderByDescending(rd => rd.Deadline).First().Deadline)</td>
                    <td>@Html.DisplayFor(modelItem => Model.Reports.ElementAt(i).Deadlines.OrderByDescending(rd => rd.Deadline).First().FinishedDate)</td>
                    <td>@Html.DisplayFor(modelItem => Model.Reports.ElementAt(i).Deadlines.OrderByDescending(rd => rd.Deadline).First().ClientNotifiedDate)</td>
                    <td>@Html.DisplayFor(modelItem => Model.Reports.ElementAt(i).Deadlines.OrderByDescending(rd => rd.Deadline).First().SentDate)</td>
                    @*<td><text>@Html.DisplayFor(modelItem => Model.Reports.ElementAt(i).FinishedDate)</text></td>
                    <td><text>@Html.DisplayFor(modelItem => Model.Reports.ElementAt(i).ClientNotifiedDate)</text></td>
                    <td><text>@Html.DisplayFor(modelItem => Model.Reports.ElementAt(i).SentDate)</text></td>*@
                    <td style="text-align: center;">
                        <a asp-action="EditDeadline" asp-route-id="@Model.Reports.ElementAt(i).Deadlines.OrderByDescending(rd => rd.Deadline).First().Id"><span class="fa fa-adjust text-primary" title="Edit:  <( >3<)>"></span></a>
                        <a id="editReport" data-toggle="modal" data-target="#editReportModal"><span class="fa fa-edit text-primary" tabindex="0" data-toggle="tooltip" data-placement="top" title="Edit:  @Model.Reports.ElementAt(i).Name"></span></a>
                        <a asp-action="Details" asp-route-id="@Model.Reports.ElementAt(i).Id"><span class="fa fa-book text-primary" tabindex="0" data-toggle="tooltip" data-placement="top" title="View:  @Model.Reports.ElementAt(i).Name"></span></a>
                        <a id="deleteReport" data-toggle="modal" data-target="#deleteReportModal"><span class="fa fa-remove text-primary" tabindex="0" data-toggle="tooltip" data-placement="top" title="Delete:  @Model.Reports.ElementAt(i).Name"></span></a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div id="editReportModal" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                @await Html.PartialAsync("Edit", new Report())
            </div>
        </div>
    </div>
    <div id="deleteReportModal" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                    @await Html.PartialAsync("Delete", new Report())
            </div>
        </div>
    </div>
    <nav aria-label="Pagination Bar">
        <div class="row container">
            <ul class="pagination col-sm-6">
                @{int pagenavlimit = 3; }
                @{ int pagelastlimit = 2;}
                @if (Model.CurrentPage == 1 ){
                    pagenavlimit += 2;
                    <li class="page-item disabled"><span class="page-link"><span aria-hidden="true">Prev</span></span></li>
                } else{
                    <li><span><span aria-hidden="true">@Html.ActionLink("Prev", "Index", new { search = Model.Filters.Search, column = Model.Filters.Column, plan = Model.Filters.Plan, pageIndex = Model.CurrentPage - 1, begin = Model.Filters.Begin, end = Model.Filters.End }, new { @class = "page-link" }) </span></span></li>
                }
                @if(Model.CurrentPage == 2){
                    pagenavlimit += 1;
                } @if(Model.CurrentPage == Model.PagesCount()){
                    pagelastlimit += 2;
                } @if (Model.CurrentPage == Model.PagesCount()-1){
                    pagelastlimit += 1;
                } @for (int i = Model.CurrentPage-pagelastlimit; i <= Model.PagesCount() && i <= Model.CurrentPage + pagenavlimit; i++){
                    if (i < 1){ i = 1; }
                    if (i == Model.CurrentPage + pagenavlimit){
                        <li class="page-item disabled"><span class="page-link">...<span class="sr-only">(current)</span></span></li>
                        <li class="page-item"><span>@Html.ActionLink((Model.PagesCount()).ToString(), "Index", new { search = Model.Filters.Search, column = Model.Filters.Column, plan = Model.Filters.Plan, pageIndex = Model.PagesCount(), begin = Model.Filters.Begin, end = Model.Filters.End }, new { @class = "page-link" })</span></li>
                    } else{
                        if (i == Model.CurrentPage){
                            <li class="page-item active"><span>@Html.ActionLink(@i.ToString(), "Index", new { search = Model.Filters.Search, column = Model.Filters.Column, plan = Model.Filters.Plan, pageIndex = @i, begin = Model.Filters.Begin, end = Model.Filters.End }, new { @class = "page-link" })</span></li>
                        } else{
                            <li class="page-item"><span>@Html.ActionLink(@i.ToString(), "Index", new { search = Model.Filters.Search, column = Model.Filters.Column, plan = Model.Filters.Plan, pageIndex = @i, begin = Model.Filters.Begin, end = Model.Filters.End }, new { @class = "page-link" })</span></li>
                        }
                    }
                }
                @if (Model.CurrentPage == Model.PagesCount()){
                    <li class="page-item disabled"><span class="page-link"><span aria-hidden="true">Next</span></span></li>
                } else{
                    <li class="page-item"><span><span aria-hidden="true">@Html.ActionLink("Next", "Index", new { search = Model.Filters.Search, column = Model.Filters.Column, plan = Model.Filters.Plan, pageIndex = Model.CurrentPage + 1 , begin = Model.Filters.Begin, end = Model.Filters.End }, new { @class = "page-link" }) </span></span></li>
                }
            </ul>       
        </div>
    </nav>
}
@section Scripts{ 
    <script src="~/js/ReportsHandler.js" type="text/javascript"></script>
    <script>
        $(function () {
            $('[data-toggle="tooltip"]').tooltip()
        })
    </script>
}