@model ReportOverviewApp.Models.ReportViewModels.ReportViewModel

@{
    ViewData["Title"] = "Index";
}
<style>
    .report-index{
        margin-left: auto;
    }
</style>
<h3 class="page-header">Reports 
    <button class="btn btn-primary" type="button" id="mag-glass" data-toggle="modal" data-target="#SearchReportModal"><span class="glyphicon glyphicon-search"></span></button>
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#CreateReportModal" aria-label="Left Align"><span class="glyphicon glyphicon-plus-sign"></span></button>
</h3>
@*<form class="form-horizontal col-sm-10" asp-controller="Reports" asp-action="Index">
    <div class="form-group">
        <div class="col-sm-3">
            <div class="input-group">
                <input type="search" class="form-control" name="search" placeholder="Search For Reports" aria-describedby="mag-glass"/>
                <span class="input-group-btn">
                    <button class="btn btn-default" type="button" id="mag-glass"><span class="glyphicon glyphicon-search"></span></button>
                </span>
            </div>
        </div>
    </div>
</form>*@
@*<form class="form-horizontal asp-action=Create col-sm-2" style="text-align:right;">
    <button type="submit" asp-action="Create" class="btn btn-primary" name="item" aria-label="Left Align"><span class="glyphicon glyphicon-plus-sign"></span>Add Report</button>
</form>*@
<div class="report-top-content">
    <ul class="nav nav-pills col-sm-12">
        <li role="presentation"><a href="#">All</a></li>
        <li role="presentation"><a href="#">Quarterly</a></li>
        <li role="presentation"><a href="#">Monthly</a></li>
    </ul>
</div>
<div id="SearchReportModal" class="modal fade" tabindex="-1" rolde="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                @await Html.PartialAsync("Search")
            </div>
        </div>
        
    </div>
</div>
<div id="CreateReportModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                @await Html.PartialAsync("Create", new Report())
            </div>
        </div>
    </div>
</div>
@if (Model.Reports == null || Model.Reports.Count() == 0) { <br /><h4 style="text-align: center; padding-top: 30px">No Records To Display</h4> }
else {
    <table class="table report-table table-condensed table-bordered table-striped table-hover">
        <thead>
            <tr>
                <th>@Html.ActionLink("ID", "Index", new { search = Model.Search, plan = Model.Plan, pageIndex = Model.CurrentPage, column = "ID" })</th>
                <th>@Html.ActionLink("Name", "Index", new { search = Model.Search, plan = Model.Plan, pageIndex = Model.CurrentPage, column = "Name" })</th>
                <th>@Html.ActionLink("Deadline", "Index", new { search = Model.Search, plan = Model.Plan, pageIndex = Model.CurrentPage, column = "Deadline" })</th>
                <th>Finished On</th>
                <th>Notified On</th>
                <th>Sent On</th>
                @*<th>Created</th>
                <th>Notified</th>
                <th>Sent</th>*@
                <th>Options</th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Model.Reports.Count(); i++)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => Model.Reports.ElementAt(i).ID)</td>
                    <td>@Html.DisplayFor(modelItem => Model.Reports.ElementAt(i).Name)</td>
                    <td>@Html.DisplayFor(modelItem => Model.Reports.ElementAt(i).DateDue)</td>
                    <td>@Html.DisplayFor(modelItem => Model.Reports.ElementAt(i).DateDone)</td>
                    <td>@Html.DisplayFor(modelItem => Model.Reports.ElementAt(i).DateClientNotified)</td>
                    <td>@Html.DisplayFor(modelItem => Model.Reports.ElementAt(i).DateSent)</td>
                    <td>
                        @{ string testing = Model.Reports.ElementAt(i).ToJson();}
                        <a onclick="EditReport(@testing)" data-toggle="modal" data-target="#EditReportModal">Edit</a>
                        
                        @*<a asp-action="Edit" asp-route-id="@Model.Reports.ElementAt(i).ID">Edit</a> |
                        <a asp-action="Details" asp-route-id="@Model.Reports.ElementAt(i).ID">Details</a> |
                        <a asp-action="Delete" asp-route-id="@Model.Reports.ElementAt(i).ID">Delete</a>*@
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <textarea type="text" id="Tester" runat="server">

    </textarea>
    <div id="EditReportModal" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    @await Html.PartialAsync("Edit", Model.Reports.ElementAt(3))
                </div>
            </div>
        </div>
    </div>
    <nav aria-label="...">
        <div class="row container">
            <ul class="pagination col-sm-6">
                @{int pagenavlimit = 3; }
                @{ int pagelastlimit = 2;}
                @if (Model.CurrentPage == 1 )
                {
                    pagenavlimit += 2;
                    <li class="disabled">
                        <span>
                            <span aria-hidden="true">Prev</span>
                        </span>
                    </li>
                }
                else
                {
                    <li>
                        <span>
                            <span aria-hidden="true">@Html.ActionLink("Prev", "Index", new { search = Model.Search, column = Model.Column, plan = Model.Plan, pageIndex = Model.CurrentPage - 1 }) </span>
                        </span>
                    </li>
                }
                @if(Model.CurrentPage == 2)
                {
                    pagenavlimit += 1;
                }
                @if(Model.CurrentPage == Model.PagesCount())
                {
                    pagelastlimit += 2;
                }
                @if (Model.CurrentPage == Model.PagesCount()-1)
                {
                    pagelastlimit += 1;
                }
                @for (int i = Model.CurrentPage-pagelastlimit; i <= Model.PagesCount() && i <= Model.CurrentPage + pagenavlimit; i++)
                {
                    if (i < 1)
                    {
                        i = 1;
                    }
                    if (i == Model.CurrentPage + pagenavlimit)
                    {
                        <li class="disabled">
                            <span>...<span class="sr-only">(current)</span></span>
                        </li>
                        <li>
                            <span>@Html.ActionLink((Model.PagesCount()).ToString(), "Index", new { search = Model.Search, column = Model.Column, plan = Model.Plan, pageIndex = Model.PagesCount() })</span>
                        </li>
                    }
                    else
                    {
                        if (i == Model.CurrentPage)
                        {
                            <li class="active" style="color:white;">
                                <span>@Html.ActionLink(@i.ToString(), "Index", new { search = Model.Search, column = Model.Column, plan = Model.Plan, pageIndex = @i })</span>
                            </li>

                        }
                        else
                        {
                            <li>
                                <span>@Html.ActionLink(@i.ToString(), "Index", new { search = Model.Search, column = Model.Column, plan = Model.Plan, pageIndex = @i })</span>
                            </li>
                        }
                    }
                }
                @if (Model.CurrentPage == Model.PagesCount())
                {
                    <li class="disabled">
                        <span>
                            <span aria-hidden="true">Next</span>
                        </span>
                    </li>
                }
                else
                {
                    <li>
                        <span>
                            <span aria-hidden="true">@Html.ActionLink("Next", "Index", new { search = Model.Search, column = Model.Column, plan = Model.Plan, pageIndex = Model.CurrentPage + 1 }) </span>
                        </span>
                    </li>
                }
            </ul>       
        </div>
    </nav>
}

@*<div class="col-sm-3">
    <label class="col-sm-9 text-right">Showing 1-@Model.Count() Of @Model.Count()</label>
</div>*@