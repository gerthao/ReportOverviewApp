@model ReportOverviewApp.Models.ReportViewModels.SelectPlanViewModel

@{
    ViewData["Title"] = "SelectPlan";
}
<h3 class="page-header">Select Plan</h3>
<hr />
<h5>Clicking on a state will filter to associated plans.&nbsp;&nbsp;Clicking on a plan option will display reports under that plan.</h5>

<div id="selectPlanForm" class="container">
    <form>
        @if (Model == null || Model.StatePlanSelection == null || Model.StatePlanSelection.Count() == 0)
        {
            <div class="row">
                <div class="col-md-12 list-group">
                    <p class="list-group-item bg-danger"><strong>No States Or Plans Found</strong></p>
                </div>
            </div>
        }
        else
        {
            <div class="row">
                <div class="col-md-3 list-group">
                    <p class="list-group-item"><strong>Select State</strong></p>
                    @foreach (var stateItem in (Model.StatePlanSelection.Select(tuple => tuple.Item1).Distinct().OrderBy(t => t.ToString())))
                    {
                        @*@Html.ActionLink(stateItem, "SelectPlan", new { state = @stateItem }, new { @class = "list-group-item list-group-item-action" })*@
                        <p class="list-group-item list-group-item-action">@stateItem</p>
                    }
                    @if (!String.IsNullOrEmpty(Model.State))
                    {
                        @*@Html.ActionLink("[Go Back]", "SelectPlan", new { }, new {@class = "list-group-item list-group-item-action" })*@
                    }
                </div>
                <div id="planListGroup" class="col-md-6 list-group">
                    <p class="list-group-item"><strong>Select Plan</strong></p>
                    <div id="selectPlanListViewComponent">
                        @await Component.InvokeAsync("SelectPlanList", Model.State)
                    </div>
                </div>
            </div>
        }
    </form>
</div>



@section Scripts {
    <script>
        $(document).ready(function () {
            $('p.list-group-item.list-group-item-action').on('click', function () {
                let stateName = $(this).text();
                if ($(this).hasClass('bg-primary')) {
                    return;
                }
                $(this).addClass('bg-primary');
                $(this).siblings().removeClass('bg-primary');
                $.get('/Reports/GetSelectPlanList?State=' + stateName, function (data) {
                    $('#selectPlanListViewComponent').slideUp(333, function () {
                        $('#selectPlanListViewComponent').html(data);
                    });
                    $('#selectPlanListViewComponent').show(333);
                    
                });
            });
        });
    </script>
    
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}